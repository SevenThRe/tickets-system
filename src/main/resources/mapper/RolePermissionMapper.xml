<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.icss.etc.ticket.mapper.RolePermissionMapper">
  <resultMap id="BaseResultMap" type="com.icss.etc.ticket.entity.RolePermission">
    <!--@mbg.generated-->
    <!--@Table t_role_permission-->
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <id column="permission_id" jdbcType="BIGINT" property="permissionId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    role_id, permission_id, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from t_role_permission
    where role_id = #{roleId,jdbcType=BIGINT}
      and permission_id = #{permissionId,jdbcType=BIGINT}
  </select>
  <insert id="insert" parameterType="com.icss.etc.ticket.entity.RolePermission">
    <!--@mbg.generated-->
    insert into t_role_permission (role_id, permission_id, create_time
      )
    values (#{roleId,jdbcType=BIGINT}, #{permissionId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.icss.etc.ticket.entity.RolePermission">
    <!--@mbg.generated-->
    insert into t_role_permission
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="permissionId != null">
        permission_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="permissionId != null">
        #{permissionId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.icss.etc.ticket.entity.RolePermission">
    <!--@mbg.generated-->
    update t_role_permission
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
      and permission_id = #{permissionId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.icss.etc.ticket.entity.RolePermission">
    <!--@mbg.generated-->
    update t_role_permission
    set create_time = #{createTime,jdbcType=TIMESTAMP}
    where role_id = #{roleId,jdbcType=BIGINT}
      and permission_id = #{permissionId,jdbcType=BIGINT}
  </update>
  <select id="selectByAll" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List" />
        from t_role_permission
        <where>
            <if test="roleId != null">
                and role_id=#{roleId,jdbcType=BIGINT}
            </if>
            <if test="permissionId != null">
                and permission_id=#{permissionId,jdbcType=BIGINT}
            </if>
            <if test="createTime != null">
                and create_time=#{createTime,jdbcType=TIMESTAMP}
            </if>
        </where>
    </select>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update t_role_permission
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createTime != null">
            when role_id = #{item.roleId,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
    </trim>
    where role_id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.roleId,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into t_role_permission
    (role_id, permission_id, create_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.roleId,jdbcType=BIGINT}, #{item.permissionId,jdbcType=BIGINT}, #{item.createTime,jdbcType=TIMESTAMP}
        )
    </foreach>
  </insert>

  <delete id="delPermissionByRoleId">
    delete from t_role_permission where role_id = #{roleId} and permission_id = #{permissionId}
    </delete>
</mapper>