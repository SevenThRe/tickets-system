<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.icss.etc.ticket.mapper.UserRoleMapper">
  <resultMap id="BaseResultMap" type="com.icss.etc.ticket.entity.UserRole">
    <!--@mbg.generated-->
    <!--@Table t_user_role-->
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    user_id, role_id, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from t_user_role
    where user_id = #{userId,jdbcType=BIGINT}
      and role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <insert id="insert" parameterType="com.icss.etc.ticket.entity.UserRole">
    <!--@mbg.generated-->
    insert into t_user_role (user_id, role_id, create_time
      )
    values (#{userId,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT}, default
      )
  </insert>
  <insert id="insertSelective" parameterType="com.icss.etc.ticket.entity.UserRole">
    <!--@mbg.generated-->
    insert into t_user_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.icss.etc.ticket.entity.UserRole">
    <!--@mbg.generated-->
    update t_user_role
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
      and role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.icss.etc.ticket.entity.UserRole">
    <!--@mbg.generated-->
    update t_user_role
    set create_time = #{createTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=BIGINT}
      and role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <select id="selectByAll" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List" />
        from t_user_role
        <where>
            <if test="userId != null">
                and user_id=#{userId,jdbcType=BIGINT}
            </if>
            <if test="roleId != null">
                and role_id=#{roleId,jdbcType=BIGINT}
            </if>
            <if test="createTime != null">
                and create_time=#{createTime,jdbcType=TIMESTAMP}
            </if>
        </where>
    </select>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update t_user_role
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createTime != null">
            when user_id = #{item.userId,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
    </trim>
    where user_id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.userId,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into t_user_role
    (user_id, role_id, create_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.userId,jdbcType=BIGINT}, #{item.roleId,jdbcType=BIGINT}, #{item.createTime,jdbcType=TIMESTAMP}
        )
    </foreach>
  </insert>

  <update id="transferUserToNormal">
    update t_user_role set role_id = 3 where user_id = #{userId}
    </update>

  <select id="selectByUserId" resultType="boolean">
    select * from t_user_role
    LEFT JOIN t_role on t_user_role.role_id = t_role.role_id
    where t_user_role.user_id = #{userId} and t_role.base_role_code != #{baseRoleCode}
  </select>

  <select id="checkOperationPermission" resultType="com.icss.etc.ticket.entity.UserPermission">
    SELECT
      t.ticket_id AS ticketId,
      CASE
        WHEN (t.create_by = u.user_id
          OR t.processor_id = u.user_id
          OR r.base_role_code = 'ADMIN')
          AND t.status != 3 THEN 1
        ELSE 0
        END AS canClose,
      CASE
        WHEN (t.create_by = u.user_id
          OR r.base_role_code = 'ADMIN')
          AND t.status = 2 THEN 1
        ELSE 0
        END AS canEvaluate,
      CASE
        WHEN (t.create_by = u.user_id
          OR t.processor_id = u.user_id
          OR r.base_role_code = 'ADMIN')
          AND t.status NOT IN (2,
                               3) THEN 1
        ELSE 0
        END AS canComment,
      CASE
        WHEN t.status = 0
          AND t.processor_id IS NOT NULL
          AND (d.manager_id = u.user_id
            OR t.processor_id = u.user_id
            OR r.base_role_code = 'ADMIN') THEN 1
        ELSE 0
        END AS canTransfer,
      CASE
      WHEN t.status = 1
      AND t.processor_id IS NOT NULL
      AND (
      t.processor_id = u.user_id
      OR r.base_role_code = 'ADMIN') THEN 1
      ELSE 0
      END AS canProcess
    FROM
      t_ticket t
        JOIN
      t_user u
      ON u.user_id = #{userId}
        LEFT JOIN
      t_department d
      ON t.department_id = d.department_id
        LEFT JOIN
      t_user_role ur
      ON u.user_id = ur.user_id
        LEFT JOIN
      t_role r
      ON ur.role_id = r.role_id
    WHERE
      t.ticket_id = #{ticketId}
  </select>
</mapper>