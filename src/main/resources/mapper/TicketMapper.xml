<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.icss.etc.ticket.mapper.TicketMapper">
  <resultMap id="BaseResultMap" type="com.icss.etc.ticket.entity.Ticket">
    <!--@Table t_ticket-->
    <id column="ticket_id" jdbcType="BIGINT" property="ticketId" />
    <result column="type_id" jdbcType="BIGINT" property="typeId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
    <result column="processor_id" jdbcType="BIGINT" property="processorId" />
    <result column="department_id" jdbcType="BIGINT" property="departmentId" />
    <result column="priority" jdbcType="TINYINT" property="priority" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="expect_finish_time" jdbcType="TIMESTAMP" property="expectFinishTime" />
    <result column="actual_finish_time" jdbcType="TIMESTAMP" property="actualFinishTime" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
    <result column="update_by" jdbcType="BIGINT" property="updateBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    ticket_id, type_id, title, content, processor_id, department_id, priority, `status`, 
    expect_finish_time, actual_finish_time, is_deleted, create_by, update_by, create_time, 
    update_time
  </sql>
  <insert id="insert" keyColumn="ticket_id" keyProperty="ticketId" parameterType="com.icss.etc.ticket.entity.Ticket" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_ticket (type_id, title, content, 
      processor_id, department_id, priority, 
      `status`, expect_finish_time, actual_finish_time, 
      is_deleted, create_by, update_by, 
      create_time, update_time)
    values (#{typeId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}, 
      #{processorId,jdbcType=BIGINT}, #{departmentId,jdbcType=BIGINT}, #{priority,jdbcType=TINYINT}, 
      #{status,jdbcType=TINYINT}, #{expectFinishTime,jdbcType=TIMESTAMP}, #{actualFinishTime,jdbcType=TIMESTAMP}, 
      #{isDeleted,jdbcType=TINYINT}, #{createBy,jdbcType=BIGINT}, #{updateBy,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
    <select id="getDeptStats" resultType="com.icss.etc.ticket.entity.dto.DeptTicketStatsDTO">
        SELECT
        COUNT(*) as totalCount,
        SUM(IF(status = 0, 1, 0)) as pendingCount,
        SUM(IF(status = 1, 1, 0)) as processingCount,
        SUM(IF(status = 2, 1, 0)) as completedCount,
        SUM(IF(status = 3, 1, 0)) as closedCount,
        AVG(TIMESTAMPDIFF(HOUR, create_time,
        IF(status IN (2,3), actual_finish_time, NOW()))) as avgProcessTime,
        ROUND(SUM(IF(status IN (2,3), 1, 0)) * 100.0 /
        NULLIF(COUNT(*), 0), 2) as completionRate,
        (SELECT AVG(evaluation_score)
        FROM t_ticket_record
        WHERE operation_type = 'EVALUATE'
        AND ticket_id IN (SELECT ticket_id FROM t_ticket WHERE department_id = #{deptId})
        ) as satisfactionRate
        FROM t_ticket
        WHERE department_id = #{deptId}
        AND is_deleted = 0
    </select>

  <update id="update">
      update t_ticket
      <set>
        <if test="typeId!= null">type_id = #{typeId,jdbcType=BIGINT},</if>
        <if test="title != null">title = #{title,jdbcType=VARCHAR},</if>
        <if test="content!= null">content = #{content,jdbcType=LONGVARCHAR},</if>
        <if test="processorId != null">processor_id = #{processorId,jdbcType=BIGINT},</if>
        <if test="departmentId != null">department_id = #{departmentId,jdbcType=BIGINT},</if>
        <if test="priority != null">priority = #{priority,jdbcType=TINYINT},</if>
        <if test="status != null">`status` = #{status,jdbcType=TINYINT},</if>
        <if test="expectFinishTime != null">expect_finish_time = #{expectFinishTime,jdbcType=TIMESTAMP},</if>
        <if test="actualFinishTime != null">actual_finish_time = #{actualFinishTime,jdbcType=TIMESTAMP},</if>
        <if test="isDeleted != null">is_deleted = #{isDeleted,jdbcType=TINYINT},</if>
          update_by = #{updateBy,jdbcType=BIGINT},
          update_time = default
      </set>
      where ticket_id = #{ticketId,jdbcType=BIGINT}
    </update>

  <update id="deleteById">
      update t_ticket set is_deleted = 1
      where ticket_id = #{ticketId,jdbcType=BIGINT}
    </update>

  <select id="getById" resultMap="BaseResultMap">
      select
          <include refid="Base_Column_List" />
      from t_ticket
        where ticket_id = #{ticketId,jdbcType=BIGINT}
      and is_deleted = 0
    </select>

  <select id="pageList" resultType="com.icss.etc.ticket.entity.Ticket">
      select
          <include refid="Base_Column_List" />
      from t_ticket
        where is_deleted = 0
        <if test="queryDTO.keyword != null and queryDTO.keyword != ''">and title like concat('%', #{queryDTO.keyword,jdbcType=VARCHAR}, '%')</if>
        <if test="queryDTO.processorId != null">and processor_id = #{queryDTO.processorId,jdbcType=BIGINT}</if>
        <if test="queryDTO.departmentId != null">and department_id = #{queryDTO.departmentId,jdbcType=BIGINT}</if>
        <if test="queryDTO.priority != null">and priority = #{queryDTO.priority,jdbcType=TINYINT}</if>
        <if test="queryDTO.status != null">and `status` = #{queryDTO.status,jdbcType=TINYINT}</if>
        <if test="queryDTO.startTime != null">and create_time &gt;= #{queryDTO.startTime,jdbcType=TIMESTAMP}</if>
        <if test="queryDTO.endTime != null">and create_time &lt;= #{queryDTO.endTime,jdbcType=TIMESTAMP}</if>
      order by create_time desc
    </select>

  <select id="count" resultType="long">
      select count(1)
      from t_ticket
        where is_deleted = 0
        <if test="queryDTO.keyword != null and queryDTO.keyword != ''">and title like concat('%', #{queryDTO.keyword,jdbcType=VARCHAR}, '%')</if>
        <if test="queryDTO.processorId != null">and processor_id = #{queryDTO.processorId,jdbcType=BIGINT}</if>
        <if test="queryDTO.departmentId != null">and department_id = #{queryDTO.departmentId,jdbcType=BIGINT}</if>
        <if test="queryDTO.priority != null">and priority = #{queryDTO.priority,jdbcType=TINYINT}</if>
        <if test="queryDTO.status != null">and `status` = #{queryDTO.status,jdbcType=TINYINT}</if>
        <if test="queryDTO.startTime != null">and create_time &gt;= #{queryDTO.startTime,jdbcType=TIMESTAMP}</if>
        <if test="queryDTO.endTime != null">and create_time &lt;= #{queryDTO.endTime,jdbcType=TIMESTAMP}</if>
        order by create_time desc
    </select>

    <select id="selectForExport" resultType="com.icss.etc.ticket.entity.dto.TicketExportDTO">
        SELECT
        t.ticket_id as ticketCode,
        t.title,
        t.content,
        d.department_name as departmentName,
        u.real_name as processorName,
        CASE t.status
        WHEN 0 THEN '待处理'
        WHEN 1 THEN '处理中'
        WHEN 2 THEN '已完成'
        WHEN 3 THEN '已关闭'
        END as statusName,
        CASE t.priority
        WHEN 0 THEN '普通'
        WHEN 1 THEN '紧急'
        WHEN 2 THEN '非常紧急'
        END as priorityName,
        t.create_time as createTime,
        t.expect_finish_time as expectFinishTime,
        t.actual_finish_time as actualFinishTime
        FROM t_ticket t
        LEFT JOIN t_department d ON t.department_id = d.department_id
        LEFT JOIN t_user u ON t.processor_id = u.user_id
        <where>
            t.is_deleted = 0
            <if test="keyword != null and keyword != ''">
                AND (t.title LIKE CONCAT('%',#{keyword},'%')
                OR t.content LIKE CONCAT('%',#{keyword},'%'))
            </if>
            <if test="status != null">
                AND t.status = #{status}
            </if>
            <if test="priority != null">
                AND t.priority = #{priority}
            </if>
            <if test="departmentId != null">
                AND t.department_id = #{departmentId}
            </if>
            <if test="processorId != null">
                AND t.processor_id = #{processorId}
            </if>
            <if test="startTime != null">
                AND t.create_time >= #{startTime}
            </if>
            <if test="endTime != null">
                AND t.create_time &lt;= #{endTime}
            </if>
        </where>
        ORDER BY t.create_time DESC
    </select>

  <select id="getMyTickets" resultMap="BaseResultMap">
      select
          <include refid="Base_Column_List" />
      from t_ticket
        where create_by = #{userId,jdbcType=BIGINT}
        and is_deleted = 0
        <if test="queryDTO.keyword != null and queryDTO.keyword != ''">and title like concat('%', #{queryDTO.keyword,jdbcType=VARCHAR}, '%')</if>
        <if test="queryDTO.departmentId != null">and department_id = #{queryDTO.departmentId,jdbcType=BIGINT}</if>
        <if test="queryDTO.priority != null">and priority = #{queryDTO.priority,jdbcType=TINYINT}</if>
        <if test="queryDTO.status != null">and `status` = #{queryDTO.status,jdbcType=TINYINT}</if>
        <if test="queryDTO.startTime != null">and create_time &gt;= #{queryDTO.startTime,jdbcType=TIMESTAMP}</if>
        <if test="queryDTO.endTime != null">and create_time &lt;= #{queryDTO.endTime,jdbcType=TIMESTAMP}</if>
      order by create_time desc
    </select>

  <select id="getTodoTickets" resultMap="BaseResultMap">
      select
            <include refid="Base_Column_List" />
      from t_ticket
        where processor_id = #{userId,jdbcType=BIGINT}
        and is_deleted = 0
        <if test="queryDTO.keyword != null and queryDTO.keyword != ''">and title like concat('%', #{queryDTO.keyword,jdbcType=VARCHAR}, '%')</if>
        <if test="queryDTO.departmentId != null">and department_id = #{queryDTO.departmentId,jdbcType=BIGINT}</if>
        <if test="queryDTO.priority != null">and priority = #{queryDTO.priority,jdbcType=TINYINT}</if>
        <if test="queryDTO.status != null">and `status` = #{queryDTO.status,jdbcType=TINYINT}</if>
        <if test="queryDTO.startTime != null">and create_time &gt;= #{queryDTO.startTime,jdbcType=TIMESTAMP}</if>
        <if test="queryDTO.endTime != null">and create_time &lt;= #{queryDTO.endTime,jdbcType=TIMESTAMP}</if>
      order by create_time
    </select>

  <select id="getDeptTickets" resultMap="BaseResultMap">
        select
            <include refid="Base_Column_List" />
        from t_ticket
            where department_id = #{deptId,jdbcType=BIGINT}
            and is_deleted = 0
            <if test="queryDTO.keyword != null and queryDTO.keyword != ''">and title like concat('%', #{queryDTO.keyword,jdbcType=VARCHAR}, '%')</if>
            <if test="queryDTO.processorId != null">and processor_id = #{queryDTO.processorId,jdbcType=BIGINT}</if>
            <if test="queryDTO.priority != null">and priority = #{queryDTO.priority,jdbcType=TINYINT}</if>
            <if test="queryDTO.status != null">and `status` = #{queryDTO.status,jdbcType=TINYINT}</if>
            <if test="queryDTO.startTime != null">and create_time &gt;= #{queryDTO.startTime,jdbcType=TIMESTAMP}</if>
            <if test="queryDTO.endTime != null">and create_time &lt;= #{queryDTO.endTime,jdbcType=TIMESTAMP}</if>
        order by create_time desc
    </select>

  <update id="updateStatus">
      update t_ticket set `status` = #{status,jdbcType=TINYINT}, update_time = NOW()
      , update_by = #{updateBy,jdbcType=BIGINT}
      where ticket_id = #{ticketId,jdbcType=BIGINT} and is_deleted = 0
    </update>

  <update id="transferDept">
        update t_ticket set department_id = #{deptId,jdbcType=BIGINT}, update_time = NOW()
        , update_by = #{updateBy,jdbcType=BIGINT}
        where ticket_id = #{ticketId,jdbcType=BIGINT} and is_deleted = 0
    </update>

    <select id="getTypesStats" resultType="com.icss.etc.ticket.entity.dto.TicketTypeStatsDTO">
        SELECT
            type_id,
            type_name,
            count,
            ROUND(count * 100.0 / totalTickets, 2) AS proportion
        FROM (
                 SELECT
                     t.type_id,
                     t.type_name,
                     COUNT(*) AS count
                 FROM
                     t_ticket_type t
                         JOIN
                     t_ticket tt ON t.type_id = tt.type_id
                 WHERE
                     tt.is_deleted = 0
                 GROUP BY
                     t.type_id, t.type_name
             ) AS typeStats,
             (SELECT COUNT(*) AS totalTickets FROM t_ticket WHERE is_deleted = 0) AS total
    </select>

  <select id="getWorkloadStats" resultType="com.icss.etc.ticket.entity.dto.WorkloadStatsDTO">
      SELECT u.user_id                                                                  AS userId,
             u.username                                                                 AS userName,
             SUM(CASE WHEN t.status = 1 THEN 1 ELSE 0 END)                              AS processingCount,
             SUM(CASE WHEN t.status = 2 THEN 1 ELSE 0 END)                              AS completedCount,
             (SUM(CASE WHEN t.status = 2 THEN 1 ELSE 0 END) * 1.0 / COUNT(t.ticket_id)) AS workloadRate
      FROM t_ticket t
               JOIN
           t_user u ON t.processor_id = u.user_id
      WHERE t.department_id = #{deptId}
        AND t.is_deleted = 0
      GROUP BY u.user_id, u.username
  </select>

  <select id="getEfficiencyStats" resultType="com.icss.etc.ticket.entity.dto.EfficiencyStatsDTO">
      SELECT u.user_id AS userId,
             u.username AS userName,
             AVG(TIMESTAMPDIFF(HOUR, t.create_time, t.actual_finish_time)) AS avgProcessTime
      FROM t_ticket t
               JOIN
           t_user u ON t.processor_id = u.user_id
      WHERE t.department_id = #{deptId}
        AND t.is_deleted = 0
      GROUP BY u.user_id, u.username
    </select>

    <select id="getProcessorStats" resultType="com.icss.etc.ticket.entity.dto.ProcessorStatsDTO">
        SELECT
            SUM(CASE WHEN t.status = 1 THEN 1 ELSE 0 END) AS processingCount,
            SUM(CASE WHEN t.status = 2 THEN 1 ELSE 0 END) AS completedCount,
            AVG(TIMESTAMPDIFF(SECOND, t.create_time, t.actual_finish_time)) AS avgProcessTime,
            SUM(CASE WHEN t.actual_finish_time &lt;= t.expect_finish_time THEN 1 ELSE 0 END) * 1.0 / SUM(CASE WHEN t.status = 2 THEN 1 ELSE 0 END) AS onTimeRate,
        AVG(tr.evaluation_score) AS satisfactionRate
        FROM
        t_ticket t
        LEFT JOIN
        t_ticket_record tr ON t.ticket_id = tr.ticket_id AND tr.operation_type = 3
        WHERE
        t.processor_id = #{processorId}
        AND t.is_deleted = 0
    </select>

    <select id="getTrendStats" parameterType="map" resultType="com.icss.etc.ticket.entity.dto.TicketTrendDTO">
        SELECT DATE(t.create_time)                                AS date,
               COUNT(CASE WHEN t.status = 0 THEN 1 ELSE NULL END) AS newCount,
               COUNT(CASE WHEN t.status = 2 THEN 1 ELSE NULL END) AS completedCount,
               CASE
                   WHEN COUNT(*) = 0 THEN 0
                   ELSE COUNT(CASE WHEN t.status = 2 THEN 1 ELSE NULL END) * 1.0 / COUNT(*)
                   END                                            AS completionRate
        FROM t_ticket t
        WHERE t.department_id = #{deptId}
          AND t.create_time >= DATE_SUB(CURRENT_DATE, INTERVAL #{days} DAY)
          AND t.is_deleted = 0
        GROUP BY DATE(t.create_time)
        ORDER BY DATE(t.create_time)
    </select>

    <update id="assignProcessor">
        update t_ticket
        set processor_id = #{processorId,jdbcType=BIGINT},
        update_time = NOW()
        where ticket_id = #{ticketId,jdbcType=BIGINT}
        and is_deleted = 0
    </update>
</mapper>