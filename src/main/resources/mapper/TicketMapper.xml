<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.icss.etc.ticket.mapper.TicketMapper">

    <!-- 基础结果映射 -->
    <resultMap id="BaseResultMap" type="com.icss.etc.ticket.entity.Ticket">
        <id column="ticket_id" property="ticketId" />
        <result column="type_id" property="typeId" />
        <result column="title" property="title" />
        <result column="content" property="content" />
        <result column="processor_id" property="processorId" />
        <result column="department_id" property="departmentId" />
        <result column="priority" property="priority"
                typeHandler="com.icss.etc.ticket.handler.PriorityTypeHandler"/>
        <result column="status" property="status"
                typeHandler="com.icss.etc.ticket.handler.TicketStatusTypeHandler"/>
        <result column="expect_finish_time" property="expectFinishTime" />
        <result column="actual_finish_time" property="actualFinishTime" />
        <result column="is_deleted" property="isDeleted" />
        <result column="create_by" property="createBy" />
        <result column="update_by" property="updateBy" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />

        <!-- 关联字段 -->
        <result column="type_name" property="typeName" />
        <result column="department_name" property="departmentName" />
        <result column="processor_name" property="processorName" />
        <result column="creator_name" property="creatorName" />
        <result column="updater_name" property="updaterName" />
    </resultMap>

    <!-- 基础列 -->
    <sql id="Base_Column_List">
        ticket_id, type_id, title, content, processor_id,
        department_id, priority, status, expect_finish_time,
        actual_finish_time, is_deleted, create_by, update_by,
        create_time, update_time
    </sql>

    <!-- 关联查询列 -->
    <sql id="Join_Column_List">
        t.ticket_id, t.type_id, t.title, t.content, t.processor_id,
        t.department_id, t.priority, t.status, t.expect_finish_time,
        t.actual_finish_time, t.is_deleted, t.create_by, t.update_by,
        t.create_time, t.update_time,
        tt.type_name,
        d.department_name,
        pu.real_name as processor_name,
        cu.real_name as creator_name,
        uu.real_name as updater_name
    </sql>

    <!-- 关联表 -->
    <sql id="Join_Tables">
        t_ticket t
            LEFT JOIN t_ticket_type tt ON t.type_id = tt.type_id
                                           LEFT JOIN t_department d ON t.department_id = d.department_id
                                           LEFT JOIN t_user pu ON t.processor_id = pu.user_id
                                           LEFT JOIN t_user cu ON t.create_by = cu.user_id
                                           LEFT JOIN t_user uu ON t.update_by = uu.user_id
    </sql>

    <!-- 查询条件 -->
    <sql id="queryCondition">
        <where>
            t.is_deleted = 0
            <if test="query != null">
                <if test="query.keyword != null and query.keyword != ''">
                    AND (
                    t.title LIKE CONCAT('%', #{query.keyword}, '%')
                    OR t.content LIKE CONCAT('%', #{query.keyword}, '%')
                    OR t.ticket_id LIKE CONCAT('%', #{query.keyword}, '%')
                    )
                </if>
                <if test="query.status != null">
                    AND t.status = #{query.status}
                </if>
                <if test="query.priority != null">
                    AND t.priority = #{query.priority}
                </if>
                <if test="query.departmentId != null">
                    AND t.department_id = #{query.departmentId}
                </if>
                <if test="query.processorId != null">
                    AND t.processor_id = #{query.processorId}
                </if>
                <if test="query.userId != null">
                    AND (t.create_by = #{query.userId} OR t.processor_id = #{query.userId})
                </if>
                <if test="query.startTime != null">
                    AND t.create_time >= #{query.startTime}
                </if>
                <if test="query.endTime != null">
                    AND t.create_time &lt;= #{query.endTime}
                </if>
            </if>
        </where>
    </sql>

    <select id="selectTicketList" resultType="com.icss.etc.ticket.entity.Ticket">
        SELECT t.*, tt.type_name as typeName,
        d.department_name as departmentName,
        u.real_name as processorName
        FROM t_ticket t
        LEFT JOIN t_ticket_type tt ON t.type_id = tt.type_id
        LEFT JOIN t_department d ON t.department_id = d.department_id
        LEFT JOIN t_user u ON t.processor_id = u.user_id
        WHERE t.is_deleted = 0
        <if test="query.userId != null">
            AND t.create_by = #{query.userId}
        </if>
        <if test="query.keyword != null and query.keyword != ''">
            AND (
            t.title LIKE CONCAT('%', #{query.keyword}, '%')
            OR t.content LIKE CONCAT('%', #{query.keyword}, '%')
            OR t.ticket_id LIKE CONCAT('%', #{query.keyword}, '%'))
        </if>
        <if test="query.status != null">
            AND t.status = #{query.status}
        </if>
        <if test="query.priority != null">
            AND t.priority = #{query.priority}
        </if>
        <if test="query.startTime != null">
            AND t.create_time >= #{query.startTime}
        </if>
        <if test="query.endTime != null">
            AND t.create_time &lt;= #{query.endTime}
        </if>
        <if test="query.departmentId != null">
            AND t.department_id = #{query.departmentId}
        </if>
        ORDER BY t.create_time DESC
    </select>

    <select id="selectTicketById" resultType="com.icss.etc.ticket.entity.Ticket">
        SELECT *
        FROM t_ticket
        WHERE ticket_id = #{ticketId}
        AND is_deleted = 0
    </select>

    <select id="selectTicketDetail" resultType="com.icss.etc.ticket.entity.vo.TicketDetailVO">
        SELECT
        t.*,
        tt.type_name,
        d.department_name,
        u.real_name as processor_name,
        cu.real_name as creator_name,
        uu.real_name as updater_name
        FROM t_ticket t
        LEFT JOIN t_ticket_type tt ON t.type_id = tt.type_id
        LEFT JOIN t_department d ON t.department_id = d.department_id
        LEFT JOIN t_user u ON t.processor_id = u.user_id
        LEFT JOIN t_user cu ON t.create_by = cu.user_id
        LEFT JOIN t_user uu ON t.update_by = uu.user_id
        WHERE t.ticket_id = #{ticketId}
        AND t.is_deleted = 0
    </select>

    <insert id="insertTicket" useGeneratedKeys="true" keyProperty="ticketId">
        INSERT INTO t_ticket (
        type_id, title, content, processor_id, department_id,
        priority, status, expect_finish_time, create_by,
        create_time, is_deleted
        ) VALUES (
        #{typeId}, #{title}, #{content}, #{processorId}, #{departmentId},
        #{priority}, #{status}, #{expectFinishTime}, #{createBy},
        #{createTime}, #{isDeleted}
        )
    </insert>

    <update id="updateTicket">
        UPDATE t_ticket
        <set>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="processorId != null">
                processor_id = #{processorId},
            </if>
            <if test="departmentId != null">
                department_id = #{departmentId},
            </if>
            <if test="priority != null">
                priority = #{priority},
            </if>
            <if test="actualFinishTime != null">
                actual_finish_time = #{actualFinishTime},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy},
            </if>
            update_time = #{updateTime}
        </set>
        WHERE ticket_id = #{ticketId}
        AND is_deleted = 0
    </update>

    <!-- 统计用户相关工单数量 -->
    <select id="countUserTickets" resultType="integer">
        SELECT COUNT(1)
        FROM t_ticket
        WHERE is_deleted = 0
        AND (create_by = #{userId} OR processor_id = #{userId})
    </select>

    <!-- 统计各状态工单数量 -->
    <select id="countByStatus" resultType="java.util.Map">
        SELECT
        status,
        COUNT(1) as count
        FROM t_ticket
        WHERE processor_id = #{userId}
        AND status IN (0, 1)  <!-- PENDING, PROCESSING -->
        AND is_deleted = 0
        GROUP BY status
    </select>

    <!-- 计算平均处理时间 -->
    <select id="calculateAvgProcessTime" resultType="double">
        SELECT
        AVG(TIMESTAMPDIFF(HOUR, create_time,
        CASE
        WHEN status IN (2, 3) THEN actual_finish_time <!-- COMPLETED, CLOSED -->
        ELSE NOW()
        END)) as avg_time
        FROM t_ticket
        WHERE is_deleted = 0
        AND processor_id = #{userId}
        AND status IN (2, 3)  <!-- COMPLETED, CLOSED -->
    </select>

    <!-- 计算平均满意度 -->
    <select id="calculateAvgSatisfaction" resultType="double">
        SELECT AVG(r.evaluation_score)
        FROM t_ticket t
        JOIN t_ticket_record r ON t.ticket_id = r.ticket_id
        WHERE t.is_deleted = 0
        AND t.processor_id = #{userId}
        AND r.operation_type = 3 -- FINISH
        AND r.evaluation_score IS NOT NULL
    </select>

    <!-- 获取月度统计数据 -->
    <select id="getMonthlyStatistics" resultType="com.icss.etc.ticket.entity.vo.ticket.MonthlyStatisticsVO">
        SELECT
        DATE_FORMAT(create_time, '%Y-%m') as month,
        COUNT(1) as totalCount,
        SUM(CASE WHEN status IN (2, 3) THEN 1 ELSE 0 END) as completedCount,
        ROUND(SUM(CASE WHEN status IN (2, 3) THEN 1 ELSE 0 END) * 100.0 / COUNT(1), 2) as completionRate,
        AVG(CASE
        WHEN status IN (2, 3)
        THEN TIMESTAMPDIFF(HOUR, create_time, actual_finish_time)
        ELSE NULL
        END) as avgProcessTime
        FROM t_ticket
        WHERE is_deleted = 0
        AND (create_by = #{userId} OR processor_id = #{userId})
        AND create_time >= DATE_SUB(CURDATE(), INTERVAL 12 MONTH)
        GROUP BY DATE_FORMAT(create_time, '%Y-%m')
        ORDER BY month DESC
    </select>

    <!-- 获取部门统计数据 -->
    <select id="getDepartmentStatistics" resultType="com.icss.etc.ticket.entity.vo.ticket.DepartmentStatisticsVO">
        SELECT
            d.department_id,
            d.department_name,
            COUNT(t.ticket_id) as totalCount,
            SUM(CASE WHEN t.status = 0 THEN 1 ELSE 0 END) as pendingCount,
            SUM(CASE WHEN t.status = 1 THEN 1 ELSE 0 END) as processingCount,
            SUM(CASE WHEN t.status IN (2, 3) THEN 1 ELSE 0 END) as completedCount,
            AVG(CASE
                    WHEN t.status IN (2, 3)
                        THEN TIMESTAMPDIFF(HOUR, t.create_time, t.actual_finish_time)
                    ELSE NULL
                END) as avgProcessTime,
            AVG(r.evaluation_score) as satisfaction
        FROM t_department d
                 LEFT JOIN t_ticket t ON d.department_id = t.department_id AND t.is_deleted = 0
                 LEFT JOIN t_ticket_record r ON t.ticket_id = r.ticket_id
            AND r.operation_type = 3
            AND r.evaluation_score IS NOT NULL
        GROUP BY d.department_id, d.department_name
        ORDER BY totalCount DESC
    </select>

    <!-- 获取工单处理效率排名 -->
    <select id="getEfficiencyRanking" resultType="java.util.Map">
        SELECT
        u.user_id,
        u.real_name,
        COUNT(t.ticket_id) as totalCount,
        AVG(TIMESTAMPDIFF(HOUR, t.create_time, t.actual_finish_time)) as avgProcessTime,
        AVG(r.evaluation_score) as satisfaction
        FROM t_user u
        LEFT JOIN t_ticket t ON u.user_id = t.processor_id
        AND t.is_deleted = 0
        AND t.status IN (2, 3)  <!-- COMPLETED, CLOSED -->
        LEFT JOIN t_ticket_record r ON t.ticket_id = r.ticket_id
        AND r.operation_type = 3
        AND r.evaluation_score IS NOT NULL
        WHERE t.create_time >= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
        GROUP BY u.user_id, u.real_name
        HAVING totalCount > 0
        ORDER BY avgProcessTime ASC
        LIMIT 10
    </select>

    <!-- 获取部门工作量统计 -->
    <select id="getDepartmentWorkload" resultType="java.util.Map">
        SELECT
            d.department_id,
            d.department_name,
            COUNT(t.ticket_id) as totalCount,
            COUNT(DISTINCT t.processor_id) as processorCount,
            ROUND(COUNT(t.ticket_id) * 1.0 /
                  NULLIF(COUNT(DISTINCT t.processor_id), 0), 2) as avgWorkload
        FROM t_department d
                 LEFT JOIN t_ticket t ON d.department_id = t.department_id
            AND t.is_deleted = 0
            AND t.create_time >= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
        GROUP BY d.department_id, d.department_name
        ORDER BY avgWorkload DESC
    </select>

    <select id="selectTodoList" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM t_ticket
        WHERE processor_id = #{processorId}
        AND status IN (0, 1)  <!-- 0=PENDING, 1=PROCESSING -->
        AND is_deleted = 0
        ORDER BY
        CASE status
        WHEN 0 THEN 0     <!-- PENDING -->
        WHEN 1 THEN 1     <!-- PROCESSING -->
        END,
        priority DESC,
        create_time ASC
    </select>

    <!-- 按条件统计工单数量 -->
    <select id="countTickets" resultType="integer">
        SELECT COUNT(1)
        FROM t_ticket t
        WHERE t.is_deleted = 0
        <if test="query.keyword != null and query.keyword != ''">
            AND (
            t.title LIKE CONCAT('%', #{query.keyword}, '%')
            OR t.content LIKE CONCAT('%', #{query.keyword}, '%')
            )
        </if>
        <if test="query.status != null">
            AND t.status = #{query.status}
        </if>
        <if test="query.priority != null">
            AND t.priority = #{query.priority}
        </if>
        <if test="query.departmentId != null">
            AND t.department_id = #{query.departmentId}
        </if>
        <if test="query.processorId != null">
            AND t.processor_id = #{query.processorId}
        </if>
        <if test="query.startTime != null">
            AND t.create_time >= #{query.startTime}
        </if>
        <if test="query.endTime != null">
            AND t.create_time &lt;= #{query.endTime}
        </if>
    </select>

    <!-- 更新工单处理人 -->
    <update id="updateProcessor">
        UPDATE t_ticket
        SET processor_id = #{processorId},
        update_by = #{updateBy},
        update_time = NOW()
        WHERE ticket_id = #{ticketId}
        AND is_deleted = 0
    </update>

    <!-- 更新工单状态 -->
    <update id="updateStatus">
        UPDATE t_ticket
        SET status = #{status},
        update_by = #{updateBy},
        update_time = NOW(),
        actual_finish_time = CASE
        WHEN #{status} IN (2,3) THEN NOW()
        ELSE actual_finish_time
        END
        WHERE ticket_id = #{ticketId}
        AND is_deleted = 0
    </update>

    <!-- 批量更新工单状态 -->
    <update id="batchUpdateStatus">
        UPDATE t_ticket
        SET status = #{status},
        update_by = #{updateBy},
        update_time = NOW(),
        actual_finish_time = CASE
        WHEN #{status} IN (2,3) THEN NOW()
        ELSE actual_finish_time
        END
        WHERE ticket_id IN
        <foreach collection="ticketIds" item="ticketId" open="(" separator="," close=")">
            #{ticketId}
        </foreach>
        AND is_deleted = 0
    </update>

    <!-- 获取个人工单统计 -->
    <select id="selectPersonalStatistics" resultType="java.util.Map">
        SELECT
        COUNT(1) as totalCount,
        SUM(CASE WHEN status = 0 THEN 1 ELSE 0 END) as pendingCount,
        SUM(CASE WHEN status = 1 THEN 1 ELSE 0 END) as processingCount,
        SUM(CASE WHEN status IN (2,3) THEN 1 ELSE 0 END) as completedCount,
        AVG(CASE
        WHEN status IN (2,3)
        THEN TIMESTAMPDIFF(HOUR, create_time, actual_finish_time)
        ELSE NULL
        END) as avgProcessTime
        FROM t_ticket
        WHERE processor_id = #{userId}
        AND is_deleted = 0
    </select>

    <!-- 获取部门工单明细 -->
    <select id="selectDeptTickets" resultMap="BaseResultMap">
        SELECT
        t.*,
        u.real_name as processor_name,
        tt.type_name
        FROM t_ticket t
        LEFT JOIN t_user u ON t.processor_id = u.user_id
        LEFT JOIN t_ticket_type tt ON t.type_id = tt.type_id
        WHERE t.department_id = #{deptId}
        AND t.is_deleted = 0
        <include refid="queryCondition"/>
        ORDER BY t.create_time DESC
    </select>

    <!-- 获取工单处理历史记录 -->
    <select id="selectTicketHistory" resultType="com.icss.etc.ticket.entity.TicketRecord">
        SELECT
        r.*,
        u.real_name as operator_name
        FROM t_ticket_record r
        LEFT JOIN t_user u ON r.operator_id = u.user_id
        WHERE r.ticket_id = #{ticketId}
        AND r.is_deleted = 0
        ORDER BY r.create_time ASC
    </select>


    <!-- 导出工单数据 -->
    <select id="selectForExport" resultType="com.icss.etc.ticket.entity.dto.ticket.TicketExportDTO">
        SELECT
        t.ticket_id as ticketCode,
        t.title,
        t.content,
        d.department_name as departmentName,
        u.real_name as processorName,
        CASE t.status
        WHEN 0 THEN '待处理'
        WHEN 1 THEN '处理中'
        WHEN 2 THEN '已完成'
        WHEN 3 THEN '已关闭'
        END as statusName,
        CASE t.priority
        WHEN 0 THEN '普通'
        WHEN 1 THEN '紧急'
        WHEN 2 THEN '非常紧急'
        END as priorityName,
        t.create_time as createTime,
        t.expect_finish_time as expectFinishTime,
        t.actual_finish_time as actualFinishTime,
        cu.real_name as creatorName,
        t.create_time as createTime
        FROM t_ticket t
        LEFT JOIN t_department d ON t.department_id = d.department_id
        LEFT JOIN t_user u ON t.processor_id = u.user_id
        LEFT JOIN t_user cu ON t.create_by = cu.user_id
        WHERE t.is_deleted = 0
        <include refid="queryCondition"/>
        ORDER BY t.create_time DESC
    </select>

    <select id="countTodayCompleted" resultType="integer">
        SELECT COUNT(1)
        FROM t_ticket
        WHERE processor_id = #{userId}
        AND status = 2
        AND actual_finish_time >= #{todayStart}
        AND is_deleted = 0
    </select>
    <select id="countTicketsByStatus" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM t_ticket
        WHERE processor_id = #{userId}
        AND status = #{status,typeHandler=com.icss.etc.ticket.handler.TicketStatusTypeHandler}
        AND is_deleted = 0
    </select>

    <select id="countCompletedTickets" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM t_ticket
        WHERE processor_id = #{userId}
        AND status = 2
        AND create_time BETWEEN #{startTime} AND #{endTime}
        AND is_deleted = 0
    </select>
    <select id="countActiveTickets" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM t_ticket
        WHERE processor_id = #{userId}
        AND status IN (0, 1)  <!-- PENDING, PROCESSING -->
        AND is_deleted = 0
    </select>
</mapper>
